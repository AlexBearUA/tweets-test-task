{"version":3,"file":"static/js/392.9c8712e0.chunk.js","mappings":"oMACA,EAA2B,2BAA3B,EAAiE,2BAAjE,EAA0G,8BAA1G,EAAiJ,yBAAjJ,EAAsL,4BAAtL,EAA6N,2BAA7N,EAAoQ,4BAApQ,EAA+S,+B,SCGlSA,EAAW,SAAC,GAOlB,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,OACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,UACAC,EACI,EADJA,GAEA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAwB,WAC5B,IAAMC,GAAmBL,EACrBM,EAAyBR,EAC7BO,EACKC,GAA0B,EAC1BA,GAA0B,EAE/BH,EAAW,CACTP,KAAAA,EACAC,OAAAA,EACAS,uBAAAA,EACAP,OAAAA,EACAM,gBAAAA,EACAJ,GAAAA,GAEH,EAED,OACE,iBAAKM,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA6BZ,KAC7B,gBAAKW,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAYC,IAAKV,EAAQW,IAAI,cAE/C,iBAAMH,UAAWC,KACjB,eAAGD,UAAWC,EAAd,UAA6BX,EAA7B,cACA,eAAGU,UAAWC,EAAd,UAA6BV,EAA7B,gBAECE,GACC,mBACEW,QAASP,EACTQ,KAAK,SACLL,UAAWC,EAHb,wBAQA,mBACEG,QAASP,EACTG,UAAWC,EACXI,KAAK,SAHP,sBAUP,EC3DD,EAA4B,6BCGfC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACE,eAAIP,UAAWC,EAAf,SACGM,GACCA,EAAMC,KAAI,gBAAGnB,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,OAAQE,EAApC,EAAoCA,GAAID,EAAxC,EAAwCA,UAAxC,OACR,yBACE,SAACL,EAAD,CACEC,KAAMA,EACNC,OAAQA,EACRC,UAAWA,EACXC,OAAQA,EACRE,GAAIA,EACJD,UAAWA,KAPNC,EADD,KAcjB,ECrBD,EAA4B,0BAA5B,EAAsE,8BAAtE,EAAkH,4BCoClH,EAhCe,WACb,OAAwBe,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEcJ,GAAUK,EAAAA,EAAAA,IAAiBF,GAAjCG,KAER,OACE,iCACE,SAACP,EAAD,CAAWC,MAAOA,KAElB,iBAAKP,UAAWC,EAAhB,WACE,mBACED,UAAWC,EACXI,KAAK,SACLS,SAAmB,IAATJ,EACVN,QAAS,kBAAMO,EAAQD,EAAO,EAArB,EAJX,uBAQA,iBAAMV,UAAWC,EAAjB,SAAmCS,KACnC,mBACEV,UAAWC,EACXI,KAAK,SACLS,SAAmB,IAATJ,EACVN,QAAS,kBAAMO,EAAQD,EAAO,EAArB,EAJX,uBAWP,C","sources":["webpack://tweets-test-task/./src/components/UserCard/UserCard.module.scss?b287","components/UserCard/UserCard.jsx","webpack://tweets-test-task/./src/components/UsersList/UsersList.module.scss?2298","components/UsersList/UsersList.jsx","webpack://tweets-test-task/./src/pages/Tweets.module.scss?b9d5","pages/Tweets.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"UserCard\":\"UserCard_UserCard__D8++g\",\"UserName\":\"UserCard_UserName__sE2sk\",\"AvatarThumb\":\"UserCard_AvatarThumb__pKnrd\",\"Avatar\":\"UserCard_Avatar__Gc9Nd\",\"DekorLine\":\"UserCard_DekorLine__4mChq\",\"CardText\":\"UserCard_CardText__riTWv\",\"FollowBtn\":\"UserCard_FollowBtn__WBeN5\",\"FollowingBtn\":\"UserCard_FollowingBtn__uMzFK\"};","import { useUpdateUserMutation } from 'redux/usersAPI';\n\nimport css from './UserCard.module.scss';\n\nexport const UserCard = ({\n  user,\n  tweets,\n  followres,\n  avatar,\n  following,\n  id,\n}) => {\n  const [updateUser] = useUpdateUserMutation();\n\n  const changeFollowingStatus = () => {\n    const followingStatus = !following;\n    let updatedFollowersAmount = followres;\n    followingStatus\n      ? (updatedFollowersAmount += 1)\n      : (updatedFollowersAmount -= 1);\n\n    updateUser({\n      user,\n      tweets,\n      updatedFollowersAmount,\n      avatar,\n      followingStatus,\n      id,\n    });\n  };\n\n  return (\n    <div className={css.UserCard}>\n      <p className={css.UserName}>{user}</p>\n      <div className={css.AvatarThumb}>\n        <img className={css.Avatar} src={avatar} alt=\"avatar\" />\n      </div>\n      <span className={css.DekorLine}></span>\n      <p className={css.CardText}>{tweets} tweets</p>\n      <p className={css.CardText}>{followres} followers</p>\n\n      {following ? (\n        <button\n          onClick={changeFollowingStatus}\n          type=\"button\"\n          className={css.FollowingBtn}\n        >\n          Following\n        </button>\n      ) : (\n        <button\n          onClick={changeFollowingStatus}\n          className={css.FollowBtn}\n          type=\"button\"\n        >\n          Follow\n        </button>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"UsersList\":\"UsersList_UsersList__Cpk3t\",\"LoadMoreBtn\":\"UsersList_LoadMoreBtn__BzZGA\"};","import { UserCard } from 'components/UserCard/UserCard';\n\nimport css from './UsersList.module.scss';\n\nexport const UsersList = ({ users }) => {\n  return (\n    <ul className={css.UsersList}>\n      {users &&\n        users.map(({ user, tweets, followres, avatar, id, following }) => (\n          <li key={id}>\n            <UserCard\n              user={user}\n              tweets={tweets}\n              followres={followres}\n              avatar={avatar}\n              id={id}\n              following={following}\n            />\n          </li>\n        ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"BtnWraper\":\"Tweets_BtnWraper__F8ei1\",\"PaginationBtn\":\"Tweets_PaginationBtn__w3AUC\",\"CurrentPage\":\"Tweets_CurrentPage__bcbr7\"};","import { useState } from 'react';\nimport { UsersList } from '../components/UsersList/UsersList';\nimport { useGetUsersQuery } from 'redux/usersAPI';\nimport css from './Tweets.module.scss';\n\nconst Tweets = () => {\n  const [page, setPage] = useState(1);\n\n  const { data: users } = useGetUsersQuery(page);\n\n  return (\n    <>\n      <UsersList users={users} />\n\n      <div className={css.BtnWraper}>\n        <button\n          className={css.PaginationBtn}\n          type=\"button\"\n          disabled={page === 1}\n          onClick={() => setPage(page - 1)}\n        >\n          Previous\n        </button>\n        <span className={css.CurrentPage}>{page}</span>\n        <button\n          className={css.PaginationBtn}\n          type=\"button\"\n          disabled={page === 3}\n          onClick={() => setPage(page + 1)}\n        >\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["UserCard","user","tweets","followres","avatar","following","id","useUpdateUserMutation","updateUser","changeFollowingStatus","followingStatus","updatedFollowersAmount","className","css","src","alt","onClick","type","UsersList","users","map","useState","page","setPage","useGetUsersQuery","data","disabled"],"sourceRoot":""}